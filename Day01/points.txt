Python		-	www.python.org		-	Open Source

pycharm	-  pycharm = 	Community Edition - https://www.jetbrains.com/pycharm/download/#section=windows
	

Open Source 
-----------


Python versions
---------------
Two versions of python that we normally discuss 

2.x vs 3.x
-----------
syntax changes

print "hello"		2.x

print("hello") 	3.x


Flavours of Python
------------------

CPython		-	 currently using

Jython			-   python code to java code

IronPython		-	work with dotnet libraries


-----------------------------------------------

python 3.x
==========

1. SDK = libraries necessary to execute python code

2. Shell = python interactive

3. IDLE - Integrated Development Environment (editor)


Editors
-------
1. Pycharm CE (open source)

2. VS Code	 CE 

3. Eclipse 

4. sublime text

5. jupyter	 notebook		-	



there operators that are overloaded
------------------------------------
+ 	-	Addition, concatenation

*   - multiplication, print a string n number of times



2.x
----

Numbers
	1. integers
	2. long
	3. float
	4. complex


3.x
---
no long data type but its properties still exists


234045986132982349352987621L

234045986132982349352987621

-------------------------------------------------------------------------------

from imp import reload


import os




--------------------------------------------------------------------------------

python coding rules
-------------------

#! - shebang	-	used to specify the path of python executable

#! /usr/bin


Comments
--------
# - add a hash to write comments - single line comment



Strings
-------
strings are enclosed in  

" this is a string " or ' this is a string '


multiple line strings
---------------------
"""
	this is the first line
	this is the second line
	this is the third line

"""

'''
	this is the first line
	this is the second line
	this is the third line
'''



doc string
----------

def fun()

	"""
	funtion fun takes two argument and both are of type integers

	fun will find the average of the two numbers passed

	"""
	print("hello world")



python relies on indetation (tab space)
---------------------------------------

def fun()
	
	print("hello world")
	print("this is function code")

	for i in range(1, 11):
		print("this is for loop code")

		if i % 2 == 2:
			print("if condition code")	
			print(i)


print("__main__ code")			# double under score main	-	 dunder main




Primitive datatypes 
-------------------
1. Numbers
	a. integers
	b. float
	c. complex

2. strings

3. boolean


-----------------------------------------------------------
bitwise

or
--
5 - 101
3 - 011
	----
    111	=> 4 + 2 + 1	=> 7	


and
---
5 - 101
3 - 011
    ----
    001	=>	1


xor
---
5 - 101
3 - 011
    ---
	110		=> 6


<<
--
5 - 101	-	1010	=> 8+0+2+0 => 10

8 - 1000	-   10000  => 16

5 - 101  - 10100		=>16+0+4+0+0 => 20


>>
--
16 - 10000 - 1000		=> 8

5 - 101 - 10 => 2


-------------------------------------------------------

if conditions
-------------


loops
-----
1. for loop		
2. while loop


for loop is like foreach loop which depends on a collection of objects

collection is generated by range  function 


range(1, 10)	-	1..9

range(1, 11, 1)  -  1..10

range(1, 15, 2)	-	1, 3, 5, ....13

range(10, 0, -1) - 10, 9, 8,....1

range(10) - [0, 1, 2, 3....9]


print(data, sep="", end="\n")






















